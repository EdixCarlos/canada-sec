import { Component, Inject, OnInit } from "@angular/core";
import { FormBuilder, FormGroup, Validators } from "@angular/forms";
import { MatDialogRef, MAT_DIALOG_DATA } from "@angular/material/dialog";
import { take } from "rxjs/operators";
import { Advisor } from "src/app/core/model/avisor.modal";
import { ExecutorService } from "src/app/core/_services/executor.service";
import { ValidatorsService } from "src/app/core/_services/validators.service";

@Component({
  selector: "app-assign-executor-modal",
  templateUrl: "./assign-executor-modal.component.html"
})
export class AssignExecutorModalComponent implements OnInit {
  formGroup: FormGroup;
  advisorList: Advisor[] = [];

  constructor(
    private fb: FormBuilder,
    public validatorService: ValidatorsService,
    public dialogRef: MatDialogRef<AssignExecutorModalComponent>,
    private executorService: ExecutorService,
    @Inject(MAT_DIALOG_DATA) public data: any
  ) { }

  ngOnInit(): void {
    this.loadForm();
    this.executorService.getAvisors(this.data.idService).pipe(take(1)).subscribe(
      (advisors) => {
        this.advisorList = advisors;
      }
    );
  }

  loadForm() {
    this.formGroup = this.fb.group({
      advisor: ['', Validators.required]
    });
  }

  closeModal() {
    this.dialogRef.close();
  }

  save() {
    this.dialogRef.close(this.formGroup.getRawValue().advisor);
  }

  get formControls() {
    return this.formGroup.controls;
  }
}
