import { Component, Inject, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { forkJoin } from 'rxjs';
import { Country } from 'src/app/core/model/country';
import { Ip360Team, SerHarTeam } from 'src/app/core/model/teams';
import { ApplicationService } from 'src/app/core/_services/application.service';
import { MaintainersService } from 'src/app/core/_services/maintainers.service';
import { ValidatorsService } from 'src/app/core/_services/validators.service';
import { MaxLength, MinLength } from 'src/app/shared/constants';

@Component({
  selector: 'app-ser-har-team-modal',
  templateUrl: './ser-har-team-modal.component.html',
  styleUrls: ['./ser-har-team-modal.component.scss']
})
export class SerHarTeamModalComponent implements OnInit {
  formGroup: FormGroup;

  countryList: Country[];
  applicationList = [];

  public minLength = MinLength;
  public maxLength = MaxLength;

  constructor(
    private fb: FormBuilder,
    public dialogRef: MatDialogRef<SerHarTeamModalComponent>,
    public validatorService: ValidatorsService,
    private mntService: MaintainersService,
    private appService: ApplicationService,
    @Inject(MAT_DIALOG_DATA) public data: any,
  ) {
    this.loadForm();
    if (data.updateRow) {
      this.formGroup.controls['country'].setValue(data.updateRow.country)
      this.formGroup.controls['hostName'].setValue(data.updateRow.hostName)
      this.formGroup.controls['ip'].setValue(data.updateRow.ip)
      this.formGroup.controls['operatingSystem'].setValue(data.updateRow.operatingSystem)
      this.formGroup.controls['serverType'].setValue(data.updateRow.serverType)
      this.formGroup.controls['domain'].setValue(data.updateRow.domain)
      this.formGroup.controls['clasification'].setValue(data.updateRow.clasification)
      this.formGroup.controls['passwordAuth'].setValue(data.updateRow.passwordAuth)
    }
  }

  get formControls() {
    return this.formGroup.controls;
  }

  loadForm() {
    this.formGroup = this.fb.group({
      country: ['', Validators.required],
      hostName: ['', Validators.required],
      ip: ['', Validators.required],
      operatingSystem: ['', Validators.required],
      serverType: ['', Validators.required],
      domain: ['', Validators.required],
      clasification: ['', Validators.required],
      passwordAuth: ['', Validators.required],
      application: ['', Validators.required],
    });
  }

  ngOnInit(): void {
    this.getInitialData();
  }

  getApplications() {
    const country = this.formControls.country.value;
    this.appService.getApplicationListByCountryId(country.id).subscribe(res => {
      this.applicationList = res;
      console.log(this.applicationList);
    });
  }

  closeModal() {
    this.dialogRef.close();
  }

  addTeam() {
    let team: SerHarTeam = {
      country: this.formGroup.controls['country'].value,
      hostName: this.formGroup.controls['hostName'].value,
      ip: this.formGroup.controls['ip'].value,
      operatingSystem: this.formGroup.controls['operatingSystem'].value,
      serverType: this.formGroup.controls['serverType'].value,
      domain: this.formGroup.controls['domain'].value,
      clasification: this.formGroup.controls['clasification'].value,
      passwordAuth: this.formGroup.controls['passwordAuth'].value,
      epmCode: this.formGroup.controls['application'].value.epmCode,
      applicationName: this.formGroup.controls['application'].value.name,
    }
    this.dialogRef.close(team);
  }

  getInitialData() {
    forkJoin([
      this.mntService.getCountries(),
    ]).subscribe(([res1]) => {
      this.countryList = res1;
      console.log(this.countryList);
    });
  }
}
