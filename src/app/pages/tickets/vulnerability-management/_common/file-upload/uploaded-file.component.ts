import { Component, Input, OnInit } from "@angular/core";
import { ObjFile } from "src/app/core/model/db-ticket.model";

@Component({
  selector: "app-uploaded-file",
  templateUrl: "./uploaded-file.component.html"
})
export class UploadedFileComponent implements OnInit {

  @Input() objFile: ObjFile;

  constructor(
  ) { }

  ngOnInit(): void {
  }

  downloadFile() {
    const blob = this.b64toBlob(this.objFile.fileData, 'application/octet-stream');
    const blobUrl = URL.createObjectURL(blob);
    if (window.navigator.msSaveBlob) { // // IE hack; see http://msdn.microsoft.com/en-us/library/ie/hh779016.aspx
      window.navigator.msSaveOrOpenBlob(blob, this.objFile.name);
    }
    else {
      var a = window.document.createElement("a");
      a.href = window.URL.createObjectURL(blob);
      a.download = this.objFile.name;
      document.body.appendChild(a);
      a.click();  // IE: "Access is denied"; see: https://connect.microsoft.com/IE/feedback/details/797361/ie-10-treats-blob-url-as-cross-origin-and-denies-access
      document.body.removeChild(a);
    }
  }

  b64toBlob(b64Data, contentType = '', sliceSize = 512) {
    const byteCharacters = atob(b64Data);
    const byteArrays = [];

    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {
      const slice = byteCharacters.slice(offset, offset + sliceSize);

      const byteNumbers = new Array(slice.length);
      for (let i = 0; i < slice.length; i++) {
        byteNumbers[i] = slice.charCodeAt(i);
      }

      const byteArray = new Uint8Array(byteNumbers);
      byteArrays.push(byteArray);
    }

    const blob = new Blob(byteArrays, { type: contentType });
    return blob;
  }
}
